kind: Deployment
apiVersion: apps/v1
metadata:
  name: primihubnode
  namespace: {{ $.Release.Namespace }}
  labels:
    name: primihubnode
  annotations:
    displayName: primihubnode
    workload: primihubnode
spec:
  replicas: 1
  selector:
    matchLabels:
      name: primihubnode
  template:
    metadata:
      labels:
        name: primihubnode
    spec:
      volumes:
        - name: primihub-pvc
          persistentVolumeClaim:
            claimName: primihub-volume
        - name: node-config
          configMap:
            name: node-configmap
            items:
              - key: primihub_node0.yaml
                path: primihub_node0.yaml
              - key: primihub_node1.yaml
                path: primihub_node1.yaml
              - key: primihub_node2.yaml
                path: primihub_node2.yaml
      containers:
        - name: node0
          image: {{ $.Values.primihub.image }}
          command:
            - ./primihub-node
          args:
            - '--node_id=node0'
            - '--service_port=50050'
            - '--config=/data/primihub_node0.yaml'
          env:
            - name: TZ
              value: Asia/Shanghai
          ports:
            - name: node0
              containerPort: 50050
              protocol: TCP
          volumeMounts:
            - name: primihub-pvc
              mountPath: /data
            - name: node-config
              mountPath: /data/primihub_node0.yaml
              subPath: primihub_node0.yaml
          imagePullPolicy: IfNotPresent
          # lifecycle:
          #   postStart:
          #     exec:
          #       command: 
          #       - /bin/bash
          #       - -c
          #       - sleep 5 && echo "${POD_IP}  primihubnode"  >> /etc/hosts
          # env:
          #   - name: POD_IP
          #     valueFrom:
          #       fieldRef:
          #         apiVersion: v1
          #         fieldPath: status.podIP
        - name: node1
          image: {{ $.Values.primihub.image }}
          command:
            - ./primihub-node
          args:
            - '--node_id=node1'
            - '--service_port=50051'
            - '--config=/data/primihub_node1.yaml'
          env:
            - name: TZ
              value: Asia/Shanghai
          ports:
            - name: node1
              containerPort: 50051
              protocol: TCP
          volumeMounts:
            - name: primihub-pvc
              mountPath: /data
            - name: node-config
              mountPath: /data/primihub_node1.yaml
              subPath: primihub_node1.yaml
          imagePullPolicy: IfNotPresent
          # lifecycle:
          #   postStart:
          #     exec:
          #       command: 
          #       - /bin/bash
          #       - -c
          #       - sleep 5 && echo "${POD_IP}  primihubnode"  >> /etc/hosts
          # env:
          #   - name: POD_IP
          #     valueFrom:
          #       fieldRef:
          #         apiVersion: v1
          #         fieldPath: status.podIP
        - name: node2
          image: {{ $.Values.primihub.image }}
          command:
            - ./primihub-node
          args:
            - '--node_id=node2'
            - '--service_port=50052'
            - '--config=/data/primihub_node2.yaml'
          env:
            - name: TZ
              value: Asia/Shanghai
          ports:
            - name: node2
              containerPort: 50052
              protocol: TCP
          volumeMounts:
            - name: primihub-pvc
              mountPath: /data
            - name: node-config
              mountPath: /data/primihub_node2.yaml
              subPath: primihub_node2.yaml
          imagePullPolicy: IfNotPresent
          # lifecycle:
          #   postStart:
          #     exec:
          #       command: 
          #       - /bin/bash
          #       - -c
          #       - sleep 5 && echo "${POD_IP}  primihubnode"  >> /etc/hosts
                # - while true; do if [[ `ps -ef|grep node|grep -v color|wc -l` -eq 1 ]];then echo "${POD_IP}  primihubnode"  >> /etc/hosts ; break; else sleep 1; echo "wait"; fi; done
          # env:
          #   - name: POD_IP
          #     valueFrom:
          #       fieldRef:
          #         apiVersion: v1
          #         fieldPath: status.podIP
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 50%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 20
  # volumeClaimTemplates:
  #   - metadata:
  #       name: primihub-pvc
  #       namespace: {{ $.Release.Namespace }}
  #     spec:
  #       accessModes: ["ReadWriteOnce"]
  #       storageClassName: "managed-nfs-storage"
  #       resources:
  #         requests:
  #           storage: 10Gi
